@using GCRBA.ViewModels
@model ProfileViewModel

@{
	ViewBag.Title = "Add New Company";
}

@if (Model.User.isAdmin == 0)
{
	@Html.Partial("AdminOnly");
} else
{
	if (Model.Company != null)
	{
		if (Model.Company.ActionType == GCRBA.Models.Company.ActionTypes.DuplicateName)
		{
			<p>This company name already exists in the GCRBA database. If you would like to edit information about this company, go back to the Admin Portal, click on "Edit Existing Company" and choose this company.</p>
		}

		if (Model.Company.ActionType == GCRBA.Models.Company.ActionTypes.InsertSuccessful)
		{
			<p>New company added.</p>
		}

		if (Model.Location != null)
		{
			if (Model.Location.ActionType == GCRBA.Models.Location.ActionTypes.InsertSuccessful)
			{
				<p>New location added.</p>
			}

			if (Model.Location.ActionType == GCRBA.Models.Location.ActionTypes.DuplicateAddress)
			{
				<p>This address is already in the system.</p>
			}
		}
	}

	<h2>@ViewBag.Title</h2>

	using (Html.BeginForm(null, null, null, FormMethod.Post, new { @class = "d-flex justify-content-center" }))
	{
		<div class="card w-75 text-left">
			<div class="card-body">
				<div class="row">
					<div class="col">
						@Html.LabelFor(model => model.Company.Name, new { @class = "form-label" })
						@Html.TextBoxFor(model => model.Company.Name, new { @autofocus = "autofocus", @class = "form-control", @required = "required" })
					</div>
					<div class="col">
						@Html.LabelFor(model => model.Company.Year, "Year Founded", new { @class = "form-label" })
						@Html.TextBoxFor(model => model.Company.Year, new { @class = "form-control", @type = "number", min = "1900", max = "2022", placeholder = "YYYY", @required = "required" })
					</div>
				</div>
				<div class="row">
					<div class="col">
						@Html.LabelFor(model => model.Company.About, "About the Company", new { @class = "form-label mt-3" })
						@Html.TextAreaFor(model => model.Company.About, new { @class = "form-control", maxlength = "2000", @required = "required" })
					</div>
				</div>

				<div class="d-flex justify-content-start mt-4 addLocation">
					<button id="addLocation" type="button" class="btn btn-link" formnovalidate><i class="fa-solid fa-angles-down"></i>  Add Locations</button>
				</div>

				<div id="addLocationArea">
					<div class="row">
						<div class="col">
							@Html.LabelFor(model => model.Location.Address, "Address", new { @class = "form-label" })
							@Html.TextBoxFor(model => model.Location.Address, new { @class = "form-control", id = "address-input" })
						</div>
					</div>
					<div class="row mt-3">
						<div class="col">
							@Html.LabelFor(model => model.Location.City, "City", new { @class = "form-label" })
							@Html.TextBoxFor(model => model.Location.City, new { @class = "form-control", id = "city-input" })
						</div>
						<div class="col">
							@Html.LabelFor(model => model.Location.State, "State", new { @class = "form-label" })
							@Html.DropDownListFor(model => model.Location.State, new SelectList(Model.States, "intStateID", "strState"), new { @class = "form-control", id = "state-input" })
						</div>
						<div class="col">
							@Html.LabelFor(model => model.Location.Zip, "Zip Code", new { @class = "form-label" })
							@Html.TextBoxFor(model => model.Location.Zip, new { @class = "form-control", id = "zip-input" })
						</div>
					</div>
					<div class="row mt-3">
						<div class="col">
							@Html.LabelFor(model => model.Location.Phone, "Phone Number", new { @class = "form-label" })
							@Html.TextBoxFor(model => model.Location.Phone, new { @class = "form-control", id = "phone-input" })
						</div>
						<div class="col">
							@Html.LabelFor(model => model.Location.Email, "Customer Service Email", new { @class = "form-label" })
							@Html.TextBoxFor(model => model.Location.Email, new { @class = "form-control" })
						</div>
					</div>
				</div>


				<button name="btnSubmit" value="submit" id="submit" class="btn btn-primary mt-3">Add New Company</button>

			</div>
		</div>
	}

<script>
		$(document).ready(function () {
			// set location form area as hidden initially
			$('#addLocationArea').hide();

			// addLocation button clicked
			$('#addLocation').click(function () {
				// do location fields currently have required attr?
				if ($('#address-input').attr('required')) {
					// yes, so remove them
					$('#address-input').removeAttr('required');
					$('#city-input').removeAttr('required');
					$('#state-input').removeAttr('required');
					$('#zip-input').removeAttr('required');
					$('#phone-input').removeAttr('required');
				} else {
					// no, so add them
					$('#address-input').attr('required', true);
					$('#city-input').attr('required', true);
					$('#state-input').attr('required', true);
					$('#zip-input').attr('required', true);
					$('#phone-input').attr('required', true);
				}
				// toggle hide/show of location form area
				$('#addLocationArea').toggle();
			})
		})
</script>
}
